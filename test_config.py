#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import asyncio
import logging
from config import Config
from openai_filter import OpenAIFilter

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    logger.info("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
    
    try:
        Config.validate()
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")
        logger.info(f"üì° –ö–∞–Ω–∞–ª—ã: {Config.get_channels()}")
        logger.info(f"üì§ –¶–µ–ª–µ–≤–æ–π —á–∞—Ç: {Config.TARGET_CHAT_ID}")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

async def test_openai():
    """–¢–µ—Å—Ç OpenAI —Ñ–∏–ª—å—Ç—Ä–∞"""
    logger.info("ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º OpenAI —Ñ–∏–ª—å—Ç—Ä...")
    
    try:
        filter_ai = OpenAIFilter()
        
        test_messages = [
            "–°–ø–∞–º! –ö—É–ø–∏ –¥–µ—à–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!",
            "–°–µ–≥–æ–¥–Ω—è –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –Ω–æ–≤—ã–π –∑–∞–∫–æ–Ω –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏",
            "–ù–æ–≤—ã–π —Ñ–∏–ª—å–º Marvel –ø–æ–±–∏–ª –≤—Å–µ —Ä–µ–∫–æ—Ä–¥—ã –≤ –ø—Ä–æ–∫–∞—Ç–µ",
            "–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
        ]
        
        for i, message in enumerate(test_messages):
            category, comment = await filter_ai.analyze_message(message, "test_channel")
            logger.info(f"–¢–µ—Å—Ç {i+1}: '{message[:50]}...' -> {category} | {comment}")
            
        logger.info("‚úÖ OpenAI —Ñ–∏–ª—å—Ç—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")
        return False

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
    
    config_ok = await test_config()
    
    if config_ok:
        openai_ok = await test_openai()
    else:
        logger.error("‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç OpenAI –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        openai_ok = False
    
    if config_ok and openai_ok:
        logger.info("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É.")
    else:
        logger.error("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")

if __name__ == "__main__":
    asyncio.run(main())