#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞
"""

import asyncio
import logging
import sys
from pyrogram import Client

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ path
sys.path.append('src')

from config import Config
from enhanced_filter import EnhancedOpenAIFilter

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def demo_enhanced():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    logger.info("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Enhanced Fact-Checking –±–æ—Ç–∞")
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ —Ñ–∏–ª—å—Ç—Ä
    bot = Client(
        "demo_enhanced",
        api_id=Config.TELEGRAM_API_ID,
        api_hash=Config.TELEGRAM_API_HASH,
        bot_token=Config.TELEGRAM_BOT_TOKEN
    )
    
    ai_filter = EnhancedOpenAIFilter()
    
    try:
        await bot.start()
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–º–∞–º–∏
        demo_cases = [
            {
                "text": "Discord –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ò–ò-—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
                "type": "üéÆ –¢–ï–•–ù–û–õ–û–ì–ò–ò",
                "description": "–î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ Discord"
            },
            {
                "text": "–ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ –æ–±–≤–∞–ª–∏–ª—Å—è –Ω–∞ 15% –ø–æ—Å–ª–µ –∑–∞—è–≤–ª–µ–Ω–∏—è —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞",
                "type": "üí∞ –§–ò–ù–ê–ù–°–´", 
                "description": "–î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏"
            },
            {
                "text": "–£—á–µ–Ω—ã–µ MIT —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–æ–≤—ã–π –∫–≤–∞–Ω—Ç–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä",
                "type": "üî¨ –ù–ê–£–ö–ê",
                "description": "–î–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö"
            },
            {
                "text": "–ú–ï–ì–ê –°–ö–ò–î–ö–ê! –ö—É–ø–∏ iPhone –∑–∞ 1000 —Ä—É–±–ª–µ–π! –¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è!",
                "type": "üóëÔ∏è –°–ü–ê–ú",
                "description": "–î–æ–ª–∂–µ–Ω –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫ –º—É—Å–æ—Ä"
            }
        ]
        
        await bot.send_message(
            chat_id=Config.TARGET_CHAT_ID,
            text="ü§ñ **–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Enhanced Fact-Checking**\n\n"
                 "–¢–µ—Å—Ç–∏—Ä—É—é —É–º–Ω—ã–π –≤—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π...\n\n"
                 "üéØ **–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
                 "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤\n"
                 "‚Ä¢ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n"
                 "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Ä–µ–∂–∏–º—ã –ø—Ä–æ–≤–µ—Ä–∫–∏\n"
                 "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
        )
        
        for i, case in enumerate(demo_cases, 1):
            logger.info(f"üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º: {case['text'][:50]}...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è —ç—Ç–æ–π —Ç–µ–º—ã
            sources = ai_filter.sources.get_sources_for_topic(case['text'])
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            category, comment = await ai_filter.analyze_message(case['text'], "Demo")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            sources_preview = ", ".join(sources[:5]) + (f" –∏ –µ—â—ë {len(sources)-5}" if len(sources) > 5 else "")
            
            if category == "—Å–∫—Ä—ã—Ç–æ":
                result_emoji = "üóëÔ∏è"
                result_text = f"**–°–ö–†–´–¢–û** | {comment}"
            else:
                result_emoji = {"–Ω–æ–≤–æ—Å—Ç–∏": "üì∞", "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è": "üé¨", "–¥—Ä—É–≥–æ–µ": "üìÑ"}.get(category, "üìÑ")
                result_text = f"**{category.upper()}**"
                if comment:
                    result_text += f" | ü§ñ {comment}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            message_text = f"**–¢–µ—Å—Ç {i}/4: {case['type']}**\n\n" \
                          f"üì® **–°–æ–æ–±—â–µ–Ω–∏–µ:**\n{case['text']}\n\n" \
                          f"üéØ **–û–∂–∏–¥–∞–Ω–∏–µ:** {case['description']}\n\n" \
                          f"üåê **–ò—Å—Ç–æ—á–Ω–∏–∫–∏ ({len(sources)}):**\n{sources_preview}\n\n" \
                          f"ü§ñ **–†–µ–∑—É–ª—å—Ç–∞—Ç:** {result_emoji} {result_text}"
            
            await bot.send_message(
                chat_id=Config.TARGET_CHAT_ID,
                text=message_text
            )
            
            logger.info(f"‚úÖ –¢–µ—Å—Ç {i}: {len(sources)} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {category}")
            await asyncio.sleep(3)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        stats = ai_filter.get_source_stats()
        stats_text = "\n".join([
            f"‚Ä¢ **{cat}**: {info['domains_count']} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
            for cat, info in stats.items()
        ])
        
        await bot.send_message(
            chat_id=Config.TARGET_CHAT_ID,
            text="üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:**\n\n"
                 f"{stats_text}\n\n"
                 f"üéâ **–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**\n\n"
                 f"üí° **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n"
                 f"‚Ä¢ –£–º–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏\n"
                 f"‚Ä¢ –õ—É—á—à–µ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Å–ø–∞–º –∏ —Ñ–µ–π–∫–∏\n"
                 f"‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ —Ä–∞–∑–Ω—ã–º —Ç–µ–º–∞–º\n"
                 f"‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã"
        )
        
        await bot.stop()
        logger.info("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(demo_enhanced())