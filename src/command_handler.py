"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø—Ä—è–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import logging
import asyncio
from typing import Optional
from pyrogram.types import Message
from two_stage_filter import TwoStageFilter, DebugInfo
from config import Config

logger = logging.getLogger(__name__)

class CommandHandler:
    def __init__(self):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞
        self.two_stage_filter = TwoStageFilter()
        
    def _extract_text_from_message(self, message: Message) -> str:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (text –∏–ª–∏ caption)"""
        if message.text:
            return message.text.strip()
        elif message.caption:
            return message.caption.strip()
        else:
            return ""
    
    async def handle_fact_check(self, bot, message: Message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–∫—Ç–æ–≤"""
        
        text_to_check = self._extract_text_from_message(message)
        
        if len(text_to_check) < 10:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
            if message.caption is not None:
                error_text = "üìù **–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è –ø–æ–¥–ø–∏—Å—å –∫ –º–µ–¥–∏–∞**\n\n" \
                           "–î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å—å –¥–ª–∏–Ω–æ–π –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é/–≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–∫—Ç–æ–≤.\n\n" \
                           "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/help` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
            else:
                error_text = "üìù **–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ**\n\n" \
                           "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–æ–π –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–∫—Ç–æ–≤.\n\n" \
                           "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/help` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
            
            await bot.send_message(
                chat_id=message.chat.id,
                text=error_text
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –Ω–∞—á–∞–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫—É
        processing_msg = await bot.send_message(
            chat_id=message.chat.id,
            text="üîÑ **–ü—Ä–æ–≤–µ—Ä—è—é —Ñ–∞–∫—Ç—ã...**\n\n"
                 f"üìù {text_to_check[:100]}{'...' if len(text_to_check) > 100 else ''}\n\n"
                 "‚è≥ –î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..."
        )
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é —Å–∏—Å—Ç–µ–º—É
            category, comment, debug_info = await self.two_stage_filter.analyze_message(
                text_to_check, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username or message.from_user.first_name}"
            )
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result_message = await self._format_fact_check_result(
                category, comment, debug_info
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º reply –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=message.chat.id,
                text=result_message,
                reply_to_message_id=message.id
            )
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é"
            await bot.delete_messages(
                chat_id=message.chat.id,
                message_ids=processing_msg.id
            )
            
            logger.info(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω —Ñ–∞–∫—Ç: {category} | {comment}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–∫—Ç–∞: {e}")
            
            await bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=processing_msg.id,
                text="‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞**\n\n"
                     f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {str(e)}\n\n"
                     "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç."
            )

    async def handle_help_command(self, bot, message: Message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
        
        help_text = """
ü§ñ **Fact-Checking Bot v3.0 - –°–ø—Ä–∞–≤–∫–∞**

**üí¨ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ–≥–æ –Ω–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å!

**üìù –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:**
‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –§–æ—Ç–æ/–≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º

**üéØ –ü—Ä–∏–º–µ—Ä:**
```
Discord –æ–±—ä—è–≤–∏–ª –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –ò–ò-–º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
```
–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!

**üìä –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:**
1Ô∏è‚É£ **–≠—Ç–∞–ø 1:** –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚Üí –≤—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤  
2Ô∏è‚É£ **–≠—Ç–∞–ø 2:** –§–∞–∫—Ç—á–µ–∫–∏–Ω–≥ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º

**üìÇ –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:**
‚Ä¢ ‚úÖ **–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ** (90-100%) - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
‚Ä¢ ‚ö†Ô∏è **–ß–∞—Å—Ç–∏—á–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ** (60-89%) - —á–∞—Å—Ç–∏—á–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ
‚Ä¢ ‚ùå **–ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º** (30-59%) - –Ω–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è
‚Ä¢ ‚ùì **–ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ** (0-29%) - –Ω–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
‚Ä¢ üóëÔ∏è **–°–ø–∞–º** - —Ä–µ–∫–ª–∞–º–∞, –º—É—Å–æ—Ä

**‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:**
‚Ä¢ –ú–æ–¥–µ–ª—å: {model}

**üí° –ö–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ `/start` - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
""".format(
            model=Config.GPT_MODEL
        )
        
        await bot.send_message(
            chat_id=message.chat.id,
            text=help_text
        )
    
    async def _format_fact_check_result(self, category: str, 
                                     comment: str, debug_info: Optional[DebugInfo]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–∫—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
        
        # –ü–æ–ª—É—á–∞–µ–º confidence_score –∏–∑ debug_info
        confidence_score = debug_info.confidence_score if debug_info else 0
        verification_status = debug_info.verification_status if debug_info else ""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ confidence_score
        confidence_emoji = self._get_confidence_emoji(confidence_score)
        
        # –î–ª—è —Å–ø–∞–º–∞ - —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        if category == "—Å–∫—Ä—ã—Ç–æ":
            return f"{confidence_emoji} –î–æ–≤–µ—Ä–∏–µ: {confidence_score}%\nü§ñ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
        
        # –î–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π/—à—É—Ç–æ–∫ - —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        if category == "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è" and confidence_score < 50:
            if debug_info and debug_info.reasoning:
                return f"ü§° –î–æ–≤–µ—Ä–∏–µ: {confidence_score}%\nü§ñ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\nüí≠ –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞: {debug_info.reasoning}"
            else:
                return f"ü§° –î–æ–≤–µ—Ä–∏–µ: {confidence_score}%\nü§ñ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞
        result = f"{confidence_emoji} –î–æ–≤–µ—Ä–∏–µ: {confidence_score}%\n"
        result += f"ü§ñ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø–æ–ª–µ–º
        if debug_info and debug_info.detailed_findings and debug_info.detailed_findings.strip():
            result += f"\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã: {debug_info.detailed_findings}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø–æ–ª–µ–º
        if debug_info and debug_info.contradictions and debug_info.contradictions.strip():
            result += f"\n‚ö†Ô∏è –ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è: {debug_info.contradictions}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø–æ–ª–µ–º
        if debug_info and debug_info.missing_evidence and debug_info.missing_evidence.strip():
            result += f"\n‚ùì –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: {debug_info.missing_evidence}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π)
        if debug_info and debug_info.sources_found:
            sources_text = ", ".join(debug_info.sources_found)
            result += f"\nüåê –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {sources_text}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞
        if debug_info and debug_info.reasoning:
            result += f"\nüí≠ –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞: {debug_info.reasoning}"
        
        return result
    
    def _get_confidence_emoji(self, confidence_score: int) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º–æ–¥–∑–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ confidence_score"""
        if confidence_score >= 90:
            return "‚úÖ"  # –î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ
        elif confidence_score >= 60:
            return "‚ö†Ô∏è"  # –ß–∞—Å—Ç–∏—á–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ
        elif confidence_score >= 30:
            return "‚ùå"  # –ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
        else:
            return "‚ùì"  # –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ
