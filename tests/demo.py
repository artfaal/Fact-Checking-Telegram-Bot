#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Ñ–∞–∫—Ç—á–µ–∫–µ—Ä–∞
"""

import asyncio
import logging
from pyrogram import Client
from test_filter_standalone import TestOpenAIFilter
from config import Config

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã"""
    logger.info("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è fact-checking –±–æ—Ç–∞")
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    bot = Client(
        "demo_bot",
        api_id=Config.TELEGRAM_API_ID,
        api_hash=Config.TELEGRAM_API_HASH,
        bot_token=Config.TELEGRAM_BOT_TOKEN
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä
    ai_filter = TestOpenAIFilter()
    
    try:
        await bot.start()
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        demo_messages = [
            "üóëÔ∏è –°–ü–ê–ú: –ö—É–ø–∏ –¥–µ—à–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! –°–∫–∏–¥–∫–∞ 90%! –¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è!",
            "üì∞ –ù–û–í–û–°–¢–ò: –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –†–æ—Å—Å–∏–∏ –ø–æ–¥–ø–∏—Å–∞–ª –Ω–æ–≤—ã–π –∑–∞–∫–æ–Ω –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏",
            "üé¨ –†–ê–ó–í–õ–ï–ß–ï–ù–ò–Ø: –ù–æ–≤—ã–π —Ñ–∏–ª—å–º Marvel –ø–æ–±–∏–ª –≤—Å–µ —Ä–µ–∫–æ—Ä–¥—ã –≤ –ø—Ä–æ–∫–∞—Ç–µ",
            "üåç –ù–û–í–û–°–¢–ò: –ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ —Å–µ–≥–æ–¥–Ω—è —É–ø–∞–ª –¥–æ 50 —Ä—É–±–ª–µ–π –∑–∞ –¥–æ–ª–ª–∞—Ä"
        ]
        
        await bot.send_message(
            chat_id=Config.TARGET_CHAT_ID,
            text="ü§ñ **–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Fact-Checking –±–æ—Ç–∞**\n\n"
                 "–°–µ–π—á–∞—Å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é GPT-5 –∏ –≤–µ–±-–ø–æ–∏—Å–∫–∞..."
        )
        
        for i, message in enumerate(demo_messages, 1):
            logger.info(f"üìù –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–æ–±—â–µ–Ω–∏–µ {i}: {message[:50]}...")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ AI
            category, comment = await ai_filter.analyze_message(message, "–î–µ–º–æ –∫–∞–Ω–∞–ª")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if category == "—Å–∫—Ä—ã—Ç–æ":
                result_text = f"üóëÔ∏è **–°–ö–†–´–¢–û** | {comment}"
                emoji = "üóëÔ∏è"
            else:
                emoji = {"–Ω–æ–≤–æ—Å—Ç–∏": "üì∞", "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è": "üé¨", "–¥—Ä—É–≥–æ–µ": "üìÑ"}.get(category, "üìÑ")
                result_text = f"{emoji} **{category.upper()}**"
                if comment:
                    result_text += f" | ü§ñ {comment}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            final_message = f"**–¢–µ—Å—Ç {i}/4**\n\n" \
                          f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ:\n{message}\n\n" \
                          f"ü§ñ –ê–Ω–∞–ª–∏–∑ GPT-5:\n{result_text}"
            
            await bot.send_message(
                chat_id=Config.TARGET_CHAT_ID,
                text=final_message
            )
            
            logger.info(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç {i}: {category} | {comment}")
            await asyncio.sleep(3)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(
            chat_id=Config.TARGET_CHAT_ID,
            text="‚úÖ **–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**\n\n"
                 "üî• **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:**\n"
                 "‚Ä¢ GPT-5 —Å –≤–µ–±-–ø–æ–∏—Å–∫–æ–º –¥–ª—è —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞\n"
                 "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∞–º–∞ –∏ –º—É—Å–æ—Ä–∞\n"
                 "‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞–º\n"
                 "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ —Ñ–∞–∫—Ç–æ–≤\n"
                 "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤\n\n"
                 "üöÄ –ì–æ—Ç–æ–≤ –∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤!"
        )
        
        await bot.stop()
        logger.info("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(demo())